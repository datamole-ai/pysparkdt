name: Dynamic Pipeline

on: [push]

env:
  CHANGELOG_FILE: CHANGELOG.md
  FULL_CHANGELOG_FILE: FULL_CHANGELOG.md
  README_FILE: README.md
  CONVCO_VERSION: v0.6.1
  POETRY_VERSION: 1.8.2
  PACKAGE_NAME: "pysparkdt"
  PACKAGE_PATH: "pysparkdt"

jobs:

  tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v4
        id: venv-cache
        with:
          path: .venv/
          key: poetry-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: Run checks
        run: |
          poetry run ruff check .
          poetry run ruff format --check .
          poetry run pytest tests
